{"version":3,"sources":["components/shared/Nav.js","components/Welcome.js","actions/types.js","components/dashboard/DashboardItem.js","actions/projectActions.js","components/dashboard/Dashboard.js","components/dashboard/dashboardoperations/CreateWallet.js","components/shared/NotFound.js","reducers/errorReducer.js","reducers/walletReducer.js","reducers/transactionReducer.js","reducers/rootReducer.js","Store.js","components/dashboard/dashboardoperations/UpdateWallet.js","components/transactions/TransactionItem.js","components/transactions/Transaction.js","components/transactions/transactionoperations/AddTransaction.js","components/transactions/transactionoperations/UpdateTransaction.js","App.js","reportWebVitals.js","index.js"],"names":["Nav","className","to","type","data-toggle","data-target","id","href","Component","Welcome","GET_ERRORS","GET_WALLETS","GET_WALLET","DELETE_WALLET","GET_TRANSACTIONS","GET_TRANSACTION","DELETE_TRANSACTION","DashboardItem","deleteBtnClick","window","confirm","props","deleteWallet","wallet","this","name","accountNumber","description","currentBalance","onClick","aria-hidden","connect","dispath","a","axios","delete","then","res","payload","Dashboard","state","totalBalance","nextProps","wallets","totalBal","i","length","setState","getWallets","walletComponent","map","aria-haspopup","aria-expanded","disabled","get","data","CreateWallet","changeHandler","event","fieldName","target","value","submitHandler","newWallet","priority","createWallet","history","preventDefault","errors","onSubmit","onChange","classnames","placeholder","post","push","catch","err","response","NotFound","class","initialState","transactions","transaction","combineReducers","action","filter","x","middleWare","thunk","store","createStore","rootReducer","compose","applyMiddleware","UpdateWallet","updateWallet","getWallet","match","params","updatedWallet","put","TransactionItem","deleteTransaction","walletId","amountWon","classCss","transactionDate","amount","walletid","Transaction","totalTransaction","total","getTransactions","transactionComponent","scope","colSpan","AddTransaction","checkbox","checked","handleSubmit","newTransaction","createTransaction","min","htmlFor","console","log","UpdateTransaction","transactionUpdated","date","updateTransaction","Date","toString","getTransaction","updatedTransaction","App","path","component","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9abaad63.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass Nav extends Component {\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\r\n                <div className=\"container\">\r\n                    <Link className=\"navbar-brand\" to=\"/\">\r\n                        Expense Manager\r\n            </Link>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#mobile-nav\">\r\n                        <span className=\"navbar-toggler-icon\" />\r\n                    </button>\r\n\r\n                    <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n                        <ul className=\"navbar-nav mr-auto\">\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link\" to=\"/dashboard\">\r\n                                    Dashboard\r\n                        </Link>\r\n                            </li>\r\n                        </ul>\r\n\r\n                        <ul className=\"navbar-nav ml-auto\">\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link \" href=\"register.html\">\r\n                                    Sign Up\r\n                        </a>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link\" href=\"login.html\">\r\n                                    Login\r\n                        </a>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Nav","import React, { Component } from 'react'\r\n\r\nclass Welcome extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"landing\">\r\n                <div className=\"light-overlay landing-inner text-dark\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-12 text-center\">\r\n                                <h1 className=\"display-3 mb-4\">Personal Expense Manager</h1>\r\n                                <p className=\"lead\">\r\n                                    Create your account to manage your daily expense and hisab kitab\r\n                        </p>\r\n                                <hr />\r\n                                <a href=\"register.html\" className=\"btn btn-lg btn-primary mr-2\">\r\n                                    Sign Up\r\n                        </a>\r\n                                <a href=\"login.html\" className=\"btn btn-lg btn-secondary mr-2\">\r\n                                    Login\r\n                        </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Welcome","export const GET_ERRORS = 'GET_ERRORS';\r\n\r\n//Dispatcher for wallets\r\nexport const GET_WALLETS = 'GET_WALLETS';\r\nexport const GET_WALLET = 'GET_WALLET';\r\nexport const DELETE_WALLET = 'DELETE_WALLET';\r\n\r\n//Dispatcher for transactions\r\nexport const GET_TRANSACTIONS = 'GET_TRANSACTIONS';\r\nexport const GET_TRANSACTION = 'GET_TRANSACTION';\r\nexport const DELETE_TRANSACTION = 'DELETE_TRANSACTION';","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport {deleteWallet} from '../../actions/projectActions'\r\nimport {connect} from 'react-redux'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nclass DashboardItem extends Component {\r\n    deleteBtnClick = () =>{\r\n        if(window.confirm(\"Are you use, you wan to delete this wallet\")){\r\n            this.props.deleteWallet(this.props.wallet.id)\r\n        }\r\n    }\r\n    render() {\r\n        const wallet = this.props.wallet\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"card card-body bg-light mb-3\">\r\n                    <div className=\"row\" >\r\n                        <div className=\"col-lg-4 col-md-3 col-6\">\r\n                            <h3>{wallet.name}</h3>\r\n                            <p>Account Number: {wallet.accountNumber}</p>\r\n                            <p>{wallet.description}</p>\r\n                        </div>\r\n                        <div className=\"col-lg-4 col-md-3 col-6 text-center\">\r\n                            <h3>Balance</h3>\r\n                            <h1>Rs. {wallet.currentBalance}</h1>\r\n                        </div>\r\n                        <div className=\"col-md-4 col-12 d-lg-block\">\r\n                            <ul className=\"list-group\">\r\n                                <Link to={`/transactions/${wallet.id}`}>\r\n                                    <li className=\"list-group-item board text-success\">\r\n                                        <i className=\"fa fa-flag-checkered pr-1\"> View Transactions </i>\r\n                                    </li>\r\n                                </Link>\r\n                                <Link to={`/updatewallet/${wallet.id}`}>\r\n                                    <li className=\"list-group-item update text-info\">\r\n                                        <i className=\"fa fa-edit pr-1\"> Update Account Info</i>\r\n                                    </li>\r\n                                </Link>\r\n                                <Link to=\"/dashboard\" onClick={()=>this.deleteBtnClick()}>\r\n                                    <li className=\"list-group-item delete text-danger\">\r\n                                        <i className=\"fa fa-minus-circle\" aria-hidden=\"true\"> Delete Account</i>\r\n                                    </li>\r\n                                </Link>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(null,{deleteWallet})(DashboardItem)","import axios from \"axios\";\r\nimport {\r\n  GET_ERRORS,\r\n  GET_WALLETS,\r\n  DELETE_WALLET,\r\n  GET_WALLET,\r\n  GET_TRANSACTIONS,\r\n  DELETE_TRANSACTION,\r\n  GET_TRANSACTION,\r\n} from \"./types\";\r\n\r\nexport const createWallet = (newWallet, history) => async (dispath) => {\r\n  await axios\r\n    .post(\"/wallet\", newWallet)\r\n    .then((res) => {\r\n      history.push(\"/dashboard\");\r\n    })\r\n    .catch((err) => {\r\n      dispath({ type: GET_ERRORS, payload: err.response.data });\r\n    });\r\n};\r\n\r\nexport const updateWallet = (id, updatedWallet, history) => async (dispath) => {\r\n  await axios\r\n    .put(`/wallet/${id}`, updatedWallet)\r\n    .then((res) => {\r\n      history.push(\"/dashboard\");\r\n    })\r\n    .catch((err) => {\r\n      dispath({ type: GET_ERRORS, payload: err.response.data });\r\n    });\r\n};\r\n\r\nexport const getWallets = () => async (dispath) => {\r\n  await axios.get(\"/wallet\").then((res) => {\r\n    dispath({ type: GET_WALLETS, payload: res.data });\r\n  });\r\n};\r\n\r\nexport const getWallet = (id) => async (dispath) => {\r\n  await axios.get(`/wallet/${id}`).then((res) => {\r\n    dispath({ type: GET_WALLET, payload: res.data });\r\n  });\r\n};\r\n\r\nexport const deleteWallet = (id) => async (dispath) => {\r\n  await axios.delete(`/wallet/${id}`).then((res) => {\r\n    dispath({ type: DELETE_WALLET, payload: id });\r\n  });\r\n};\r\n\r\n//Transactions\r\n\r\nexport const getTransactions = (walletid) => async (dispath) => {\r\n  await axios.get(`/transaction/${walletid}`).then((res) => {\r\n    dispath({ type: GET_TRANSACTIONS, payload: res.data });\r\n  });\r\n};\r\n\r\nexport const getTransaction = (walletId, id) => async (dispath) => {\r\n  await axios.get(`/transaction/${walletId}/${id}`).then((res) => {\r\n    dispath({ type: GET_TRANSACTION, payload: res.data });\r\n  });\r\n};\r\n\r\nexport const createTransaction = (newTransaction, history, walletId) => async (\r\n  dispath\r\n) => {\r\n  await axios\r\n    .post(`/transaction/${walletId}`, newTransaction)\r\n    .then((res) => {\r\n      history.push(`/transactions/${walletId}`);\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n      dispath({ type: GET_ERRORS, payload: err.response.data });\r\n    });\r\n};\r\n\r\nexport const updateTransaction = (\r\n  walletId,\r\n  id,\r\n  updatedTransaction,\r\n  history\r\n) => async (dispath) => {\r\n  await axios\r\n    .put(`/transaction/${walletId}/${id}`, updatedTransaction)\r\n    .then((res) => {\r\n      history.push(`/transactions/${walletId}`);\r\n    })\r\n    .catch((err) => {\r\n      dispath({ type: GET_ERRORS, payload: err.response.data });\r\n    });\r\n};\r\n\r\nexport const deleteTransaction = (walletid, id) => async (dispath) => {\r\n  await axios.delete(`/transaction/${walletid}/${id}`).then((res) => {\r\n    dispath({ type: DELETE_TRANSACTION, payload: id });\r\n  });\r\n};\r\n","import React, { Component } from 'react'\r\nimport DashboardItem from './DashboardItem'\r\nimport { Link } from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport {getWallets} from '../../actions/projectActions'\r\n\r\nclass Dashboard extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             totalBalance:0.0\r\n        }\r\n    }\r\n    \r\n\r\n    componentWillReceiveProps(nextProps){\r\n        if(nextProps.wallets){\r\n            let totalBal = 0\r\n            for(let i=0;i<nextProps.wallets.length;i++){\r\n                totalBal+=nextProps.wallets[i].currentBalance\r\n            }\r\n            this.setState({totalBalance:totalBal})\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.props.getWallets()\r\n    }\r\n    render() {\r\n        const wallets = this.props.wallets\r\n        const walletComponent = wallets.map(wallet=>(<DashboardItem key={wallet.id} wallet={wallet} />))\r\n\r\n        return (\r\n            <div className=\"projects\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12\">\r\n                            <h1 className=\"display-4 text-center\">My Wallets</h1>\r\n                            <br />\r\n                            <div className=\"btn-group\">\r\n                                <button type=\"button\" className=\"btn btn-info btn-lg dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                    Create new\r\n                        </button>\r\n                                <div className=\"dropdown-menu\">\r\n                                    <Link className=\"dropdown-item\" to=\"/createwallet\">Wallet</Link>\r\n                                    <button disabled className=\"dropdown-item\">Transaction</button>\r\n                                </div>\r\n                            </div>\r\n                            <br />\r\n                            <div className=\"card text-center\">\r\n                                <div className=\"card-header bg-success text-white\">\r\n                                    <h4>Current Balance (Total)</h4>\r\n                                    <h1>Rs. {this.state.totalBalance}</h1>\r\n                                </div>\r\n                            </div>\r\n                            <hr />\r\n                            {\r\n                                //<!-- Project Item Component -->\r\n                            }\r\n\r\n                            {walletComponent}\r\n\r\n                            {\r\n                                //<!-- End of Project Item Component -->\r\n                            }\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    wallets:state.wallet.wallets\r\n})\r\nexport default connect(mapStateToProps,{getWallets})(Dashboard)","import React, { Component } from 'react'\r\nimport {createWallet} from '../../../actions/projectActions'\r\nimport {connect} from 'react-redux'\r\nimport classnames from 'classnames'\r\n\r\nclass CreateWallet extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            name: '',\r\n            accountNumber: '',\r\n            description: '',\r\n            priority: '',\r\n            errors:''\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps){\r\n        if(nextProps.errors){\r\n            this.setState({errors:nextProps.errors})\r\n        }\r\n    }\r\n\r\n    changeHandler = (event, fieldName) => {\r\n        this.setState({\r\n            [fieldName]: event.target.value\r\n        })\r\n    }\r\n\r\n    submitHandler = (event) => {\r\n        const newWallet = {\r\n            name: this.state.name,\r\n            accountNumber: this.state.accountNumber,\r\n            description: this.state.description,\r\n            priority: this.state.priority\r\n        }\r\n        this.props.createWallet(newWallet,this.props.history)\r\n        event.preventDefault()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"project\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8 m-auto\">\r\n                            <h5 className=\"display-4 text-center\">Create Wallet</h5>\r\n                            <hr />\r\n                            <form onSubmit={(event)=>this.submitHandler(event)}>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" onChange={(event) => this.changeHandler(event, \"name\")} className={classnames(\"form-control form-control-lg\",{\"is-invalid\":this.state.errors.name})} placeholder=\"Account Name\" />\r\n                                    <p className=\"text-danger\">{this.state.errors.name}</p>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" onChange={(event) => this.changeHandler(event, \"accountNumber\")} className={classnames(\"form-control form-control-lg\",{\"is-invalid\":this.state.errors.accountNumber})} placeholder=\"Account No\" />\r\n                                    <p className=\"text-danger\">{this.state.errors.accountNumber}</p>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <textarea onChange={(event) => this.changeHandler(event, \"description\")} className={classnames(\"form-control form-control-lg\",{\"is-invalid\":this.state.errors.description})} placeholder=\"Description\"></textarea>\r\n                                    <p className=\"text-danger\">{this.state.errors.description}</p>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <select className=\"form-control form-control-lg\" onChange={(event) => this.changeHandler(event, \"priority\")}>\r\n                                        <option value={3}>Display Priority</option>\r\n                                        <option value={1}>High</option>\r\n                                        <option value={2}>Medium</option>\r\n                                        <option value={3}>Low</option>\r\n                                    </select>\r\n                                </div>\r\n                                <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" value=\"Create\" />\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) =>({\r\n    errors:state.errors\r\n})\r\n\r\nexport default connect(mapStateToProps,{createWallet})(CreateWallet)","import React, { Component } from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nclass NotFound extends Component {\r\n    render() {\r\n        return (\r\n            <div class=\"container\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-12\">\r\n                        <div class=\"error-template\">\r\n                            <h1>\r\n                                Oops!</h1>\r\n                            <h2>\r\n                                404 Not Found</h2>\r\n                            <div class=\"error-details\">\r\n                                Sorry, an error has occured, Requested page not found!\r\n                        </div>\r\n                            <div class=\"error-actions\">\r\n                                <Link to=\"/\" class=\"btn btn-primary btn-lg\"><span class=\"glyphicon glyphicon-home\"></span>\r\n                                Take Me Home </Link>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NotFound","import {GET_ERRORS} from '../actions/types';\r\n\r\nconst initialState = {}\r\n\r\nexport default function(state=initialState,action){\r\n    switch(action.type){\r\n        case GET_ERRORS:\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}","import { GET_WALLETS, DELETE_WALLET, GET_WALLET } from '../actions/types'\r\n\r\nconst initialState = {\r\n    wallets: [],\r\n    wallet: ''\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case GET_WALLETS:\r\n            return { ...state, wallets: action.payload };\r\n        case GET_WALLET:\r\n            return { ...state, wallet: action.payload }\r\n        case DELETE_WALLET:\r\n            return { ...state, wallets: state.wallets.filter(x => x.id !== action.payload) }\r\n        default:\r\n            return state;\r\n    }\r\n}","import {\r\n  GET_TRANSACTIONS,\r\n  GET_TRANSACTION,\r\n  DELETE_TRANSACTION,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  transactions: [],\r\n  transaction: \"\",\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_TRANSACTIONS:\r\n      return { ...state, transactions: action.payload };\r\n    case GET_TRANSACTION:\r\n      return { ...state, transaction: action.payload };\r\n    case DELETE_TRANSACTION:\r\n      return {\r\n        ...state,\r\n        transactions: state.transactions.filter((x) => x.id !== action.payload),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {combineReducers} from 'redux'\r\nimport errorReducer from './errorReducer';\r\nimport walletReducer from './walletReducer';\r\nimport transactionReducer from './transactionReducer';\r\n\r\nexport default combineReducers({\r\n    errors:errorReducer,\r\n    wallet:walletReducer,\r\n    transaction:transactionReducer\r\n});","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers/rootReducer\";\r\n\r\nconst initialState = {};\r\nconst middleWare = [thunk];\r\nlet store;\r\n\r\nstore = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  compose(applyMiddleware(...middleWare))\r\n);\r\nexport default store;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { getWallet, updateWallet } from \"../../../actions/projectActions\";\r\n\r\nclass UpdateWallet extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      id: \"\",\r\n      name: \"\",\r\n      accountNumber: \"\",\r\n      description: \"\",\r\n      priority: \"\",\r\n      currentBalance: \"\",\r\n      errors: \"\",\r\n    };\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n    if (nextProps.wallet) {\r\n      this.setState({\r\n        id: nextProps.wallet.id,\r\n        name: nextProps.wallet.name,\r\n        accountNumber: nextProps.wallet.accountNumber,\r\n        description: nextProps.wallet.description,\r\n        currentBalance: nextProps.wallet.currentBalance,\r\n        priority: nextProps.wallet.priority,\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.getWallet(this.props.match.params.id);\r\n  }\r\n\r\n  changeHandler = (event, fieldName) => {\r\n    this.setState({\r\n      [fieldName]: event.target.value,\r\n    });\r\n  };\r\n\r\n  submitHandler = (event) => {\r\n    const updateWallet = {\r\n      id: this.state.id,\r\n      name: this.state.name,\r\n      accountNumber: this.state.accountNumber,\r\n      description: this.state.description,\r\n      currentBalance: this.state.currentBalance,\r\n      priority: this.state.priority,\r\n    };\r\n    this.props.updateWallet(this.state.id, updateWallet, this.props.history);\r\n    event.preventDefault();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"project\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h5 className=\"display-4 text-center\">Update Wallet</h5>\r\n              <hr />\r\n              <form onSubmit={(event) => this.submitHandler(event)}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    value={this.state.name}\r\n                    onChange={(event) => this.changeHandler(event, \"name\")}\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": this.state.errors.name,\r\n                    })}\r\n                    placeholder=\"Account Name\"\r\n                  />\r\n                  <p className=\"text-danger\">{this.state.errors.name}</p>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    value={this.state.accountNumber}\r\n                    onChange={(event) =>\r\n                      this.changeHandler(event, \"accountNumber\")\r\n                    }\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": this.state.errors.accountNumber,\r\n                    })}\r\n                    placeholder=\"Account No\"\r\n                  />\r\n                  <p className=\"text-danger\">\r\n                    {this.state.errors.accountNumber}\r\n                  </p>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    value={this.state.description}\r\n                    onChange={(event) =>\r\n                      this.changeHandler(event, \"description\")\r\n                    }\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": this.state.errors.description,\r\n                    })}\r\n                    placeholder=\"Description\"\r\n                  ></textarea>\r\n                  <p className=\"text-danger\">{this.state.errors.description}</p>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    value={this.state.priority}\r\n                    onChange={(event) => this.changeHandler(event, \"priority\")}\r\n                  >\r\n                    <option value={3}>Display Priority</option>\r\n                    <option value={1}>High</option>\r\n                    <option value={2}>Medium</option>\r\n                    <option value={3}>Low</option>\r\n                  </select>\r\n                </div>\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                  value=\"Update\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  errors: state.errors,\r\n  wallet: state.wallet.wallet,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getWallet, updateWallet })(\r\n  UpdateWallet\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { deleteTransaction } from \"../../actions/projectActions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass TransactionItem extends Component {\r\n  deleteBtnClick = () => {\r\n    if (window.confirm(\"Are you use, you wan to delete this transaction\")) {\r\n      this.props.deleteTransaction(\r\n        this.props.walletId,\r\n        this.props.transaction.id\r\n      );\r\n    }\r\n  };\r\n  render() {\r\n    const transaction = this.props.transaction;\r\n    const type = transaction.type === 1 ? \"income\" : \"expense\";\r\n    const amountWon = transaction.type === 1 ? \"+\" : \"-\";\r\n    const classCss = transaction.type === 1 ? \"table-success\" : \"table-danger\";\r\n\r\n    return (\r\n      <tr className={classCss}>\r\n        <td>{transaction.transactionDate}</td>\r\n        <td>{transaction.description}</td>\r\n        <td className=\"text-success\">{amountWon + transaction.amount}</td>\r\n        <td>\r\n          <Link\r\n            to={`/transactions/update/${this.props.walletId}/${transaction.id}`}\r\n            className=\"text-info\"\r\n          >\r\n            <i className=\"fas fa-edit fa-2x\"></i>\r\n          </Link>\r\n        </td>\r\n        <td>\r\n          <Link\r\n            to={`/transactions/${this.props.walletId}`}\r\n            className=\"text-danger\"\r\n            onClick={() => this.deleteBtnClick()}\r\n          >\r\n            <i className=\"fas fa-trash fa-2x\"></i>\r\n          </Link>\r\n        </td>\r\n      </tr>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(null, { deleteTransaction })(TransactionItem);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport TransactionItem from \"./TransactionItem\";\r\nimport { connect } from \"react-redux\";\r\nimport { getTransactions } from \"../../actions/projectActions\";\r\n\r\nclass Transaction extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      totalTransaction: 0,\r\n    };\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.transactions) {\r\n      let total = 0;\r\n      for (let i = 0; i < nextProps.transactions.length; i++) {\r\n        if (nextProps.transactions[i].type === 1) {\r\n          total += nextProps.transactions[i].amount;\r\n        } else {\r\n          total -= nextProps.transactions[i].amount;\r\n        }\r\n      }\r\n      this.setState({ totalTransaction: total });\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.getTransactions(this.props.match.params.id);\r\n  }\r\n\r\n  render() {\r\n    const transactions = this.props.transactions;\r\n    let id = this.props.match.params.id;\r\n    const transactionComponent = transactions.map((transaction) => (\r\n      <TransactionItem\r\n        key={transaction.id}\r\n        transaction={transaction}\r\n        walletId={id}\r\n      />\r\n    ));\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <Link to=\"/dashboard\" className=\"btn btn-default btn-lg mb-3\">\r\n          Back\r\n        </Link>\r\n        <Link\r\n          to={`/transactions/add/${id}`}\r\n          className=\"btn btn-info btn-lg mb-3\"\r\n        >\r\n          <i className=\"fas fa-plus-circle\"> Record new Transaction</i>\r\n        </Link>\r\n        <br />\r\n        <div className=\"card text-center\">\r\n          <div className=\"card-header bg-success text-white\">\r\n            <h4>UBL Account Balance</h4>\r\n            <h1>Rs. {this.state.totalTransaction}</h1>\r\n          </div>\r\n        </div>\r\n        <hr />\r\n\r\n        <table className=\"table\">\r\n          <thead className=\"thead-dark\">\r\n            <tr>\r\n              <th scope=\"col\">Date</th>\r\n              <th scope=\"col\">Description</th>\r\n              <th scope=\"col\">Amount</th>\r\n              <th colSpan=\"2\"></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>{transactionComponent}</tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  transactions: state.transaction.transactions,\r\n});\r\nexport default connect(mapStateToProps, { getTransactions })(Transaction);\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport {createTransaction} from '../../../actions/projectActions';\r\nimport { connect } from 'react-redux';\r\n\r\nclass AddTransaction extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            amount: '',\r\n            description: '',\r\n            type: '1'\r\n        }\r\n    }\r\n\r\n    changeHandler = (event, fieldName, checkbox) => {\r\n        this.setState({\r\n            [fieldName]: checkbox ? event.target.checked : event.target.value\r\n        })\r\n    }\r\n    handleSubmit = (event) => {\r\n        let newTransaction = { \r\n            amount: this.state.amount, \r\n            description: this.state.description, \r\n            type: this.state.type \r\n        }\r\n        this.props.createTransaction(newTransaction,this.props.history,this.props.match.params.id);\r\n        event.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        let id = this.props.match.params.id;\r\n        const { amount, description, type } = this.state;\r\n        return (\r\n            <div className=\"add-PBI\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8 m-auto\">\r\n                            <Link to={`/transactions/${id}`} className=\"btn btn-light\">\r\n                                Back to Wallet\r\n                    </Link>\r\n                            <h4 className=\"display-4 text-center\">Record New Transaction</h4>\r\n                            <p className=\"lead text-center\">UBL Account</p>\r\n                            <form onSubmit={this.handleSubmit}>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"number\" min=\"1\" value={amount} onChange={event => this.changeHandler(event, \"amount\", false)} className=\"form-control form-control-lg\" placeholder=\"Amount\" />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <textarea value={description} onChange={event => this.changeHandler(event, \"description\", false)} className=\"form-control form-control-lg\" placeholder=\"Description\"></textarea>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"exampleFormControlTextarea1\">Transaction Type : </label>\r\n                                    <div className=\"form-check form-check-inline\">\r\n                                        <input checked={type === '1'} className=\"form-check-input\" type=\"radio\" id=\"income\" onChange={event => this.changeHandler(event, \"type\", false)} value=\"1\" />\r\n                                        <label className=\"form-check-label\" htmlFor=\"income\">Income</label>\r\n                                    </div>\r\n                                    <div className=\"form-check form-check-inline\">\r\n                                        <input checked={type === '2'} className=\"form-check-input\" type=\"radio\" id=\"expense\" onChange={event => this.changeHandler(event, \"type\", false)} value=\"2\" />\r\n                                        <label className=\"form-check-label\" htmlFor=\"expense\">Expense</label>\r\n                                    </div>\r\n                                </div>\r\n                                <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(null,{createTransaction})(AddTransaction)","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  getTransaction,\r\n  updateTransaction,\r\n} from \"../../../actions/projectActions\";\r\n\r\nclass UpdateTransaction extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      id: \"\",\r\n      amount: \"\",\r\n      description: \"\",\r\n      type: 1,\r\n      date: null,\r\n      errors: \"\",\r\n    };\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n    const date = new Date(nextProps.transaction.toString());\r\n    console.log(nextProps.transaction);\r\n    if (nextProps.transaction) {\r\n      this.setState({\r\n        id: nextProps.transaction.id,\r\n        amount: nextProps.transaction.amount,\r\n        description: nextProps.transaction.description,\r\n        type: nextProps.transaction.type,\r\n        date: date,\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.getTransaction(\r\n      this.props.match.params.walletId,\r\n      this.props.match.params.id\r\n    );\r\n    console.log(\r\n      this.props.getTransaction(\r\n        this.props.match.params.walletId,\r\n        this.props.match.params.id\r\n      )\r\n    );\r\n  }\r\n\r\n  changeHandler = (event, fieldName, checkbox) => {\r\n    this.setState({\r\n      [fieldName]: checkbox ? event.target.checked : event.target.value,\r\n    });\r\n  };\r\n\r\n  submitHandler = (event) => {\r\n    const transactionUpdated = {\r\n      id: this.state.id,\r\n      amount: this.state.amount,\r\n      description: this.state.description,\r\n      type: this.state.type,\r\n      date: this.state.date,\r\n    };\r\n    this.props.updateTransaction(\r\n      this.props.match.params.walletId,\r\n      this.state.id,\r\n      transactionUpdated,\r\n      this.props.history\r\n    );\r\n    event.preventDefault();\r\n  };\r\n\r\n  render() {\r\n    let id = this.props.match.params.walletId;\r\n    return (\r\n      <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link to={`/transactions/${id}`} className=\"btn btn-light\">\r\n                Back to Wallet\r\n              </Link>\r\n              <h4 className=\"display-4 text-center\">Update Transaction</h4>\r\n              <p className=\"lead text-center\">UBL Account</p>\r\n              <form onSubmit={(event) => this.submitHandler(event)}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"number\"\r\n                    min=\"1\"\r\n                    value={this.state.amount}\r\n                    onChange={(event) =>\r\n                      this.changeHandler(event, \"amount\", false)\r\n                    }\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": this.state.errors.name,\r\n                    })}\r\n                    placeholder=\"Amount\"\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    value={this.state.description}\r\n                    onChange={(event) =>\r\n                      this.changeHandler(event, \"description\", false)\r\n                    }\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": this.state.errors.description,\r\n                    })}\r\n                    placeholder=\"Description\"\r\n                  ></textarea>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"exampleFormControlTextarea1\">\r\n                    Transaction Type :{\" \"}\r\n                  </label>\r\n                  <div className=\"form-check form-check-inline\">\r\n                    <input\r\n                      className=\"form-check-input\"\r\n                      type=\"radio\"\r\n                      id=\"income\"\r\n                      checked={this.state.type.toString() === \"1\"}\r\n                      onChange={(event) =>\r\n                        this.changeHandler(event, \"type\", false)\r\n                      }\r\n                      value=\"1\"\r\n                    />\r\n                    <label className=\"form-check-label\" htmlFor=\"income\">\r\n                      Income\r\n                    </label>\r\n                  </div>\r\n                  <div className=\"form-check form-check-inline\">\r\n                    <input\r\n                      className=\"form-check-input\"\r\n                      type=\"radio\"\r\n                      id=\"expense\"\r\n                      checked={this.state.type.toString() === \"2\"}\r\n                      onChange={(event) =>\r\n                        this.changeHandler(event, \"type\", false)\r\n                      }\r\n                      value=\"2\"\r\n                    />\r\n                    <label className=\"form-check-label\" htmlFor=\"expense\">\r\n                      Expense\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  errors: state.errors,\r\n  transaction: state.transaction.transaction,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getTransaction, updateTransaction })(\r\n  UpdateTransaction\r\n);\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport Nav from \"./components/shared/Nav\";\r\nimport Welcome from \"./components/Welcome\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport Dashboard from \"./components/dashboard/Dashboard\";\r\nimport CreateWallet from \"./components/dashboard/dashboardoperations/CreateWallet\";\r\nimport NotFound from \"./components/shared/NotFound\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./Store\";\r\nimport UpdateWallet from \"./components/dashboard/dashboardoperations/UpdateWallet\";\r\nimport Transaction from \"./components/transactions/Transaction\";\r\nimport AddTransaction from \"./components/transactions/transactionoperations/AddTransaction\";\r\nimport UpdateTransaction from \"./components/transactions/transactionoperations/UpdateTransaction\";\r\nimport \"react-app-polyfill/stable\";\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <BrowserRouter>\r\n        <Route path=\"/\" component={Nav} />\r\n        <Switch>\r\n          <Route path=\"/\" exact component={Welcome} />\r\n          <Route path=\"/dashboard\" exact component={Dashboard} />\r\n          <Route path=\"/createwallet\" exact component={CreateWallet} />\r\n          <Route path=\"/updatewallet/:id\" exact component={UpdateWallet} />\r\n          <Route path=\"/transactions/:id\" exact component={Transaction} />\r\n          <Route\r\n            path=\"/transactions/add/:id\"\r\n            exact\r\n            component={AddTransaction}\r\n          />\r\n          <Route\r\n            path=\"/transactions/update/:walletId/:id\"\r\n            exact\r\n            component={UpdateTransaction}\r\n          />\r\n          <Route path=\"/\" component={NotFound} />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}